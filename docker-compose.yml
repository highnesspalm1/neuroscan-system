services:
  # Backend API Service
  backend:
    build: 
      context: ./BackendAPI
      dockerfile: Dockerfile
    container_name: neuroscan-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=postgresql://neuroscan:neuroscan_password@postgres:5432/neuroscan_db
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET_KEY=your-super-secret-jwt-key-here
      - CORS_ORIGINS=http://localhost:3000,https://neuroscan.example.com
    depends_on:
      - postgres
      - redis
    volumes:
      - backend_uploads:/app/uploads
      - backend_logs:/app/logs
    networks:
      - neuroscan-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Web Frontend Service
  frontend:
    build:
      context: ./WebFrontend
      dockerfile: Dockerfile
    container_name: neuroscan-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    environment:
      - VITE_API_URL=http://localhost:8000
      - VITE_ENVIRONMENT=production
    depends_on:
      - backend
    networks:
      - neuroscan-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: neuroscan-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=neuroscan_db
      - POSTGRES_USER=neuroscan
      - POSTGRES_PASSWORD=neuroscan_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - neuroscan-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U neuroscan -d neuroscan_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache Service
  redis:
    image: redis:7-alpine
    container_name: neuroscan-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - neuroscan-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: neuroscan-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    networks:
      - neuroscan-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  backend_uploads:
    driver: local
  backend_logs:
    driver: local

networks:
  neuroscan-network:
    driver: bridge
